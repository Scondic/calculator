import { cn } from '@bem-react/classname';import './index.scss';type BlockAlign = 'start' | 'center' | 'end' | 'baseline' | 'stretch';type BlockJustify = 'start' | 'center' | 'end' | 'between' | 'around';type BlockType = 'inline';type BlockDirection = 'row' | 'col';type BlockWrap = 'nowrap' | 'wrap';const cnBlock = cn('Block');interface IBlockProps {  className?: string;  align?: BlockAlign;  justify?: BlockJustify;  type?: BlockType;  direction?: BlockDirection;  grow?: boolean;  wrap?: BlockWrap;}export const Block = ({  className,  align,  justify,  type,  direction,  grow,  wrap,  children}: React.PropsWithChildren<IBlockProps & React.HTMLAttributes<HTMLElement>>) => {  return (    <div className={cnBlock({ align, justify, type, direction, grow, wrap }, [className])}>      {children}    </div>  );};